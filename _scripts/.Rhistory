knitr::opts_chunk$set(echo = TRUE)
data_model <- read.csv("https://raw.githubusercontent.com/abraham-mv/formula-1/main/data/data_for_model.csv") |> select(-X)
library(tidyverse)
data_model <- read.csv("https://raw.githubusercontent.com/abraham-mv/formula-1/main/data/data_for_model.csv") |> select(-X)
library(tidyverse)
data_model <- read.csv("https://raw.githubusercontent.com/abraham-mv/formula-1/main/data/data_for_model.csv") |> select(-X)
ata_model |>
group_by(new_team, year) |> summarise(count = n()) |>
arrange(year) |>
pivot_wider(names_from = year, values_from = count) |>
mutate_all(~ifelse(is.na(.), 0, .))
data_model |>
group_by(new_team, year) |> summarise(count = n()) |>
arrange(year) |>
pivot_wider(names_from = year, values_from = count) |>
mutate_all(~ifelse(is.na(.), 0, .))
data_model |>
mutate(engine_index = factor(engine_index),
race_pos = ifelse(race_pos == 99, NA, race_pos)) |>
ggplot(aes(race_pos, fill = new_engine)) +
geom_bar(aes(y = ..prop..)) +
theme_bw(base_size = 12) + xlab("Race position") +
ylab("Proportions") + ggtitle("Race positions by engine manufacturer") +
scale_fill_viridis(discrete = T, name=NULL) +
scale_x_continuous(breaks = seq(2,22,2)) + scale_y_continuous(breaks = seq(0,1.8,0.2))
library(viridis)
data_model |>
mutate(engine_index = factor(engine_index),
race_pos = ifelse(race_pos == 99, NA, race_pos)) |>
ggplot(aes(race_pos, fill = new_engine)) +
geom_bar(aes(y = ..prop..)) +
theme_bw(base_size = 12) + xlab("Race position") +
ylab("Proportions") + ggtitle("Race positions by engine manufacturer") +
scale_fill_viridis(discrete = T, name=NULL) +
scale_x_continuous(breaks = seq(2,22,2)) + scale_y_continuous(breaks = seq(0,1.8,0.2))
data_model |>
mutate(engine_index = factor(engine_index),
race_pos = ifelse(race_pos == 99, NA, race_pos)) |>
ggplot(aes(race_pos, fill = new_engine)) +
geom_bar(aes(y = ..prop..)) +
theme_bw(base_size = 12) + xlab("Race position") +
ylab("Proportions") + ggtitle("Race positions by engine manufacturer") +
scale_fill_viridis(discrete = T, name=NULL) +
scale_x_continuous(breaks = seq(2,22,2)) + scale_y_continuous(breaks = seq(0,1.8,0.2))
data_model |>
filter(year == 1950) |>
group_by(Driver) |> mutate(appear = n()) |>
filter(appear > 3) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
data_model |>
filter(year == 1950)
data_model |>
filter(year == 1950) |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 3)
data_model |>
filter(year == 1950) |>
group_by(Driver) |>
mutate(appear = n())
data_model |>
filter(year == 1950) |>
group_by(Driver) |>
mutate(appear = n()) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
data_model |>
filter(year == 1950) |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 2) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
data_model |>
filter(year == 1950) |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 1) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
data_model
data_model |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 3) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
data_model |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 5) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
data_model |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 10) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
rexp(100, 1/10)
sum(rexp(100, 1/10))
sum(rexp(100, 1/10))
sum(rexp(100, 1/10))
sum(rexp(100, 1/10))
sum(rexp(100, 1/10))
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/100
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
sum(rexp(100, 1/10))*1/10
library(tidyverse)
data_model <- read.csv("https://raw.githubusercontent.com/abraham-mv/formula-1/main/data/data_for_model.csv") |> select(-X)
library(viridis)
data_model |>
mutate(engine_index = factor(engine_index),
race_pos = ifelse(race_pos == 99, NA, race_pos)) |>
ggplot(aes(race_pos, fill = new_engine)) +
geom_bar(aes(y = ..prop..)) +
theme_bw(base_size = 12) + xlab("Race position") +
ylab("Proportions") + ggtitle("Race positions by engine manufacturer") +
scale_fill_viridis(discrete = T, name=NULL) +
scale_x_continuous(breaks = seq(2,22,2)) + scale_y_continuous(breaks = seq(0,1.8,0.2))
data_model |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 10) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = here("model1.stan"),
chains = 4, iter = 1000, cores = 2)
library(rstan)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = here("model1.stan"),
chains = 4, iter = 1000, cores = 2)
simple_mod <- stan(data = stan_data, file = "model1.stan",
chains = 4, iter = 1000, cores = 2)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = "model1.stan",
chains = 4, iter = 1000, cores = 2)
library(here)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = here("model1.stan"),
chains = 4, iter = 1000, cores = 2)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(viridis)
library(rstan)
data_model <- read.csv("https://raw.githubusercontent.com/abraham-mv/formula-1/main/data/data_for_model.csv") |> select(-X)
data_model |>
mutate(engine_index = factor(engine_index),
race_pos = ifelse(race_pos == 99, NA, race_pos)) |>
ggplot(aes(race_pos, fill = new_engine)) +
geom_bar(aes(y = ..prop..)) +
theme_bw(base_size = 12) + xlab("Race position") +
ylab("Proportions") + ggtitle("Race positions by engine manufacturer") +
scale_fill_viridis(discrete = T, name=NULL) +
scale_x_continuous(breaks = seq(2,22,2)) + scale_y_continuous(breaks = seq(0,1.8,0.2))
data_model |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 10) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = here("model1.stan"),
chains = 4, iter = 1000, cores = 2)
n_total
quali_pos
kph_cent
covariates
stan_data
install.packages(rstan)
install.packages('rstan')
install.packages("rstan")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(viridis)
library(rstan)
data_model <- read.csv("https://raw.githubusercontent.com/abraham-mv/formula-1/main/data/data_for_model.csv") |> select(-X)
data_model |>
mutate(engine_index = factor(engine_index),
race_pos = ifelse(race_pos == 99, NA, race_pos)) |>
ggplot(aes(race_pos, fill = new_engine)) +
geom_bar(aes(y = ..prop..)) +
theme_bw(base_size = 12) + xlab("Race position") +
ylab("Proportions") + ggtitle("Race positions by engine manufacturer") +
scale_fill_viridis(discrete = T, name=NULL) +
scale_x_continuous(breaks = seq(2,22,2)) + scale_y_continuous(breaks = seq(0,1.8,0.2))
data_model |>
group_by(Driver) |>
mutate(appear = n()) |>
filter(appear > 10) |>
ggplot(aes(Kph, Driver, fill = Driver)) + geom_boxplot() + theme_bw() +
theme(legend.position = "none") + scale_fill_viridis(discrete = T)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = here("model1.stan"),
chains = 4, iter = 1000, cores = 2)
library(here)
n_total <- length(data_model[,1])
quali_pos <- data_model$Pos
kph_cent <- data_model$Kph - mean(data_model$Kph)
engine <- data_model$new_engine
wdc_points <- data_model$wdc_points_shift
y <- data_model$points
covariates <- cbind(rep(1, n_total), quali_pos, kph_cent, model.matrix(~engine)[,-1], wdc_points)
stan_data <- list(
N = n_total, K = dim(covariates)[2],
X = covariates,
y = y
)
simple_mod <- stan(data = stan_data, file = here("model1.stan"),
chains = 4, iter = 1000, cores = 2)
#| warning: false
#| message: false
library(tidyverse)
library(tidybayes)
library(rstan)
library(lubridate)
library(here)
library(viridis)
library(knitr)
library(gridExtra)
data_model <- read.csv("data/data_for_model.csv") |> select(-X)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data_model <- read.csv("data/data_for_model.csv") |> select(-X)
getwd()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd
getwd()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data_model <- read.csv("data/data_for_model.csv") |> select(-X)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
